# .coderabbit.yaml
# React Native 프로젝트를 위한 균형잡힌 코드 리뷰 설정
# 모바일 앱 개발에 특화된 실용적인 구성

# =============================================================================
# GLOBAL SETTINGS
# =============================================================================

language: "ko-KR"

tone_instructions: |
  명확하고 실용적인 피드백을 제공하세요.
  중요한 이슈(보안, 성능, 메모리 누수, 명백한 버그)는 반드시 지적하되,
  스타일이나 선호도 문제는 제안 수준으로 가볍게 다뤄주세요.
  React Native 특성(플랫폼 차이, 성능 최적화)을 고려한 개선 방안을 제시해주세요.

early_access: false
enable_free_tier: true

# =============================================================================
# REVIEWS
# =============================================================================

reviews:
  profile: "chill"

  request_changes_workflow: false

  high_level_summary: true
  high_level_summary_placeholder: "@coderabbitai summary"
  high_level_summary_in_walkthrough: false

  auto_title_placeholder: "@coderabbitai"
  auto_title_instructions: |
    Conventional Commits 형식 권장:
    feat/fix/perf/style/refactor/docs/chore 등 사용

  review_status: true
  commit_status: true
  fail_commit_status: false

  collapse_walkthrough: false
  changed_files_summary: true
  sequence_diagrams: false
  estimate_code_review_effort: true
  assess_linked_issues: false
  related_issues: false
  related_prs: false
  suggested_labels: true
  auto_apply_labels: false
  suggested_reviewers: false
  auto_assign_reviewers: false

  in_progress_fortune: false
  poem: false

  labeling_instructions: []

  path_filters:
    # Node.js 의존성
    - "!**/node_modules/**"
    - "!**/package-lock.json"
    - "!**/yarn.lock"
    - "!**/pnpm-lock.yaml"
    
    # iOS 빌드 산출물
    - "!**/ios/build/**"
    - "!**/ios/Pods/**"
    - "!**/ios/*.xcworkspace/**"
    - "!**/ios/*.xcodeproj/**"
    - "!**/ios/Podfile.lock"
    
    # Android 빌드 산출물
    - "!**/android/build/**"
    - "!**/android/app/build/**"
    - "!**/android/.gradle/**"
    - "!**/android/gradle/**"
    - "!**/android/gradlew*"
    - "!**/*.apk"
    - "!**/*.aab"
    
    # Expo
    - "!**/.expo/**"
    - "!**/.expo-shared/**"
    
    # Metro 번들러
    - "!**/.metro-health-check*"
    - "!**/metro-cache/**"
    
    # 번들 파일
    - "!**/dist/**"
    - "!**/build/**"
    - "!**/*.bundle"
    - "!**/*.jsbundle"
    
    # 캐시 및 임시 파일
    - "!**/.cache/**"
    - "!**/tmp/**"
    - "!**/*.log"
    
    # 자동 생성
    - "!**/*.generated.*"
    - "!**/generated/**"
    
    # 소스 코드 (React Native)
    - "src/**/*.ts"
    - "src/**/*.tsx"
    - "src/**/*.js"
    - "src/**/*.jsx"
    - "App.tsx"
    - "App.js"
    - "index.js"
    - "app/**/*.ts"
    - "app/**/*.tsx"
    - "components/**/*.ts"
    - "components/**/*.tsx"
    - "screens/**/*.ts"
    - "screens/**/*.tsx"
    - "navigation/**/*.ts"
    - "navigation/**/*.tsx"
    - "hooks/**/*.ts"
    - "utils/**/*.ts"
    - "services/**/*.ts"
    - "store/**/*.ts"
    - "context/**/*.ts"
    
    # 스타일
    - "**/*.css"
    - "**/*.scss"
    
    # 설정 파일
    - "tsconfig.json"
    - "babel.config.js"
    - "metro.config.js"
    - "app.json"
    - "app.config.js"
    - "eas.json"
    
    # 문서
    - "**/*.md"
    
    # 네이티브 설정 (선택적)
    - "ios/Podfile"
    - "android/app/src/main/AndroidManifest.xml"

  path_instructions:
    - path: "src/**/screens/**"
      instructions: |
        스크린 컴포넌트의 성능과 사용자 경험을 확인하세요.
        불필요한 리렌더링, 메모리 누수, 네비게이션 이슈를 체크하세요.
    
    - path: "src/**/components/**"
      instructions: |
        컴포넌트 재사용성과 Props 타입 안정성을 확인하세요.
        React.memo, useMemo, useCallback의 적절한 사용을 체크하세요.
        플랫폼별 코드(.ios.tsx, .android.tsx)가 필요한지 검토하세요.
    
    - path: "src/**/navigation/**"
      instructions: |
        네비게이션 구조와 타입 안정성을 확인하세요.
        Deep linking 설정과 화면 전환 성능을 체크하세요.
    
    - path: "src/**/hooks/**"
      instructions: |
        커스텀 훅의 의존성 배열과 메모리 누수를 확인하세요.
        useEffect 클린업 함수가 필요한지 체크하세요.
    
    - path: "src/**/services/**"
      instructions: |
        API 호출과 에러 핸들링을 확인하세요.
        네트워크 상태 처리와 타임아웃 설정을 체크하세요.
    
    - path: "src/**/store/**"
      instructions: |
        상태 관리 로직의 불변성과 성능을 확인하세요.
        불필요한 전역 상태 사용을 지적하세요.

  abort_on_close: true
  disable_cache: false

  auto_review:
    enabled: true
    auto_incremental_review: true
    
    ignore_title_keywords:
      - "wip"
      - "draft"
      - "[skip]"
    
    labels: []
    drafts: false
    base_branches: [".*"]
    
    ignore_usernames:
      - "dependabot[bot]"
      - "renovate[bot]"

  finishing_touches:
    docstrings:
      enabled: true
    
    unit_tests:
      enabled: true

  pre_merge_checks:
    docstrings:
      mode: "off"
    
    title:
      mode: "off"
    
    description:
      mode: "off"
    
    issue_assessment:
      mode: "off"
    
    custom_checks:
      - name: "보안 필수"
        instructions: |
          API 키, 토큰, 민감한 정보가 코드에 노출되지 않았는지 확인하세요.
      
      - name: "성능 치명적 이슈"
        instructions: |
          1. 무한 루프나 메모리 누수
          2. FlatList에서 key 누락이나 잘못된 사용
          3. 대량 데이터를 map으로 렌더링
          위 이슈만 체크하세요.
      
      - name: "React Native 특화 체크"
        instructions: |
          1. Platform.OS를 사용해야 하는데 플랫폼 구분 없이 작성된 코드
          2. useEffect 클린업 누락으로 인한 메모리 누수
          3. AsyncStorage 대신 민감 정보를 일반 storage에 저장
          명백한 문제만 지적하세요.

  tools:
    # JavaScript/TypeScript 린터
    eslint:
      enabled: true
    
    # 빠른 린터
    biome:
      enabled: true
    
    # 보안 스캔
    gitleaks:
      enabled: true
    
    # 의존성 취약점
    osvScanner:
      enabled: true
    
    # Markdown
    markdownlint:
      enabled: true
    
    # YAML
    yamllint:
      enabled: true
    
    # 환경변수
    dotenvLint:
      enabled: true
    
    # GitHub Actions
    actionlint:
      enabled: true
    
    # 나머지 비활성화
    htmlhint:
      enabled: false
    oxc:
      enabled: false
    semgrep:
      enabled: false
    shellcheck:
      enabled: false
    hadolint:
      enabled: false
    github-checks:
      enabled: false
    ruff:
      enabled: false
    flake8:
      enabled: false
    pylint:
      enabled: false
    phpstan:
      enabled: false
    phpmd:
      enabled: false
    phpcs:
      enabled: false
    rubocop:
      enabled: false
    swiftlint:
      enabled: false
    golangci-lint:
      enabled: false
    detekt:
      enabled: false
    pmd:
      enabled: false
    sqlfluff:
      enabled: false
    buf:
      enabled: false
    regal:
      enabled: false
    checkov:
      enabled: false
    cppcheck:
      enabled: false
    circleci:
      enabled: false
    clippy:
      enabled: false
    prismaLint:
      enabled: false
    shopifyThemeCheck:
      enabled: false
    luacheck:
      enabled: false
    brakeman:
      enabled: false
    checkmake:
      enabled: false
    languagetool:
      enabled: false
    ast-grep:
      essential_rules: false

# =============================================================================
# CHAT
# =============================================================================

chat:
  art: false
  auto_reply: true

  integrations:
    jira:
      usage: "disabled"
    
    linear:
      usage: "disabled"

# =============================================================================
# KNOWLEDGE BASE
# =============================================================================

knowledge_base:
  opt_out: false

  web_search:
    enabled: true

  code_guidelines:
    enabled: false

  learnings:
    scope: "local"

  issues:
    scope: "local"

  jira:
    usage: "disabled"
    project_keys: []

  linear:
    usage: "disabled"
    team_keys: []

  pull_requests:
    scope: "local"

  mcp:
    usage: "disabled"
    disabled_servers: []

# =============================================================================
# CODE GENERATION
# =============================================================================

code_generation:
  docstrings:
    language: "ko-KR"
    path_instructions:
      - path: "src/**/components/**"
        instructions: |
          컴포넌트의 Props 타입과 사용 예시를 명확히 설명하세요.
          플랫폼별 동작 차이가 있다면 문서화하세요.
      
      - path: "src/**/hooks/**"
        instructions: |
          커스텀 훅의 목적, 파라미터, 반환값을 설명하세요.
          의존성과 사용 시 주의사항을 명시하세요.

  unit_tests:
    path_instructions:
      - path: "src/**/components/**"
        instructions: |
          React Native Testing Library를 사용한 테스트를 작성하세요.
          사용자 상호작용과 렌더링을 중심으로 테스트하세요.
      
      - path: "src/**/hooks/**"
        instructions: |
          @testing-library/react-hooks를 사용한 훅 테스트를 작성하세요.
          다양한 렌더링 시나리오를 검증하세요.